# MediaMTX configuration for RTSP testing
# Simple configuration to accept RTSP streams and serve them

# Log level: debug, info, warn, error
logLevel: info

authInternalUsers:
  - user:
    pass:
    ips: []        # [] means allow from any IP
    permissions:
      - action: read
        path:
  - user: myuser
    pass: mypass
    ips: []        # [] means allow from any IP
    permissions:
      - action: publish
        path:
      - action: read
        path: /videotestsrc-priv

rtspEncryption: "optional"      # or "strict", "no"

# Listen on all interfaces
rtspAddress: :8554          # Needed when encryption is "no" or "optional"
rtspsAddress: :8322         # Needed when encryption is "strict" or "optional"

# Global path defaults
pathDefaults:
  record: false

# Allow publishing streams
paths:
  # # Test stream from UDP
  # test:
  #   source: udp://127.0.0.1:5000
  
  # On-demand video test source using GStreamer
  videotestsrc:
    runOnDemand: gst-launch-1.0 videotestsrc pattern=smpte is-live=true ! video/x-raw,width=1280,height=720,framerate=30/1 ! x264enc tune=zerolatency bitrate=2000 ! mpegtsmux ! rtspclientsink location=rtsp://myuser:mypass@localhost:$RTSP_PORT/$MTX_PATH
    runOnDemandStartTimeout: 10s
    runOnDemandCloseAfter: 10s
  
  # On-demand video test source using GStreamer
  videotestsrc-priv:
    runOnDemand: gst-launch-1.0 videotestsrc pattern=smpte is-live=true ! video/x-raw,width=720,height=480,framerate=30000/1001 ! x264enc tune=zerolatency bitrate=2000 ! mpegtsmux ! rtspclientsink location=rtsp://myuser:mypass@localhost:$RTSP_PORT/$MTX_PATH
    runOnDemandStartTimeout: 10s
    runOnDemandCloseAfter: 10s

  # On-demand video test source using GStreamer (with network faults)
  videotestsrc-faulty:
    runOnDemand: gst-launch-1.0 videotestsrc pattern=smpte is-live=true ! video/x-raw,width=1280,height=720,framerate=30/1 ! x264enc tune=zerolatency bitrate=2000 ! mpegtsmux ! netsim max-delay=400 min-delay=200 max-kbps=800 drop-probability=0.02 ! rtspclientsink location=rtsp://localhost:$RTSP_PORT/$MTX_PATH
    runOnDemandStartTimeout: 10s
    runOnDemandCloseAfter: 10s
  
  # On-demand video test source using GStreamer (with severe network faults)
  videotestsrc-bad:
    runOnDemand: gst-launch-1.0 videotestsrc pattern=smpte is-live=true ! video/x-raw,width=1280,height=720,framerate=30/1 ! x264enc tune=zerolatency bitrate=2000 ! mpegtsmux ! netsim max-delay=4000 min-delay=1 max-kbps=1800 drop-probability=0.2 ! rtspclientsink location=rtsp://localhost:$RTSP_PORT/$MTX_PATH
    runOnDemandStartTimeout: 10s
    runOnDemandCloseAfter: 10s
  # 
  # # UDP source for GStreamer test stream
  # videotestsrc-udp:
  #   source: udp://127.0.0.1:8888
  # 
  # # On-demand video test source using FFmpeg  
  # ffmpeg-test:
  #   source: publisher
  #   runOnDemand: ffmpeg -f lavfi -i testsrc2=size=1280x720:rate=30 -c:v libx264 -preset ultrafast -tune zerolatency -b:v 2000k -f mpegts udp://127.0.0.1:8889
  #   runOnDemandStartTimeout: 10s
  #   runOnDemandCloseAfter: 10s
  
  test-h264:
    runOnDemand: ffmpeg -re -f lavfi -i testsrc=size=1280x720:rate=30 -vcodec libx264 -preset ultrafast -tune zerolatency -b:v 1000k -f rtsp rtsp://myuser:mypass@localhost:$RTSP_PORT/$MTX_PATH
    runOnDemandRestart: yes

  # # UDP source for FFmpeg test stream
  # ffmpeg-test-udp:
  #   source: udp://127.0.0.1:8889
  
  # Allow any path for testing (no authentication)
  ~^.*:
    # No authentication required
    
# Disable HLS and other protocols for simplicity
hlsAddress: ""
webrtcAddress: ""
